/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuU8g2.h"
#include <RuntimeMenuItem.h>
#include <ScrollChoiceMenuItem.h>
#include <EditableLargeNumberMenuItem.h>
#include <IoAbstraction.h>
#include <EepromItemStorage.h>
#include <ArduinoEEPROMAbstraction.h>
#include "allMenuItemProject_langSelect.h"

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern U8G2_SH1106_128X64_NONAME_F_HW_I2C gfx;
extern U8g2Drawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;

// Any externals needed by IO expanders, EEPROMs etc


// Global Menu Item exports
extern TextMenuItem menuTextPlain;
extern BackMenuItem menuBackText;
extern SubMenuItem menuText;
extern ListRuntimeMenuItem menuSubRamListCustom;
extern char* enumStrSubRamListRam[];
extern AnyMenuInfo minfoSubRamListRam;
extern ListRuntimeMenuItem menuSubRamListRam;
extern const char* const enumStrSubRamList1[];
extern ListRuntimeMenuItem menuSubRamList1;
extern ScrollChoiceMenuItem menuSubRamCustomScroll;
extern ScrollChoiceMenuItem menuSubRamScrollRom;
extern AnyMenuInfo minfoSubRamScrollRam;
extern ScrollChoiceMenuItem menuSubRamScrollRam;
extern AnyMenuInfo minfoSubRamRGBR;
extern Rgb32MenuItem menuSubRamRGBR;
extern Rgb32MenuItem menuSubRamRGBA;
extern SubMenuInfo minfoSubRam;
extern BackMenuItem menuBackSubRam;
extern SubMenuItem menuSubRam;
extern EnumMenuInfo minfoSubFlashFoods;
extern EnumMenuItem menuSubFlashFoods;
extern ActionMenuItem menuSubFlashAction;
extern FloatMenuItem menuSubFlashFltFlash;
extern FloatMenuInfo minfoSubFlashFltRam;
extern FloatMenuItem menuSubFlashFltRam;
extern EditableLargeNumberMenuItem menuSubFlashLageNumRam;
extern EditableLargeNumberMenuItem menuSubFlashLargeNumW;
extern BackMenuItem menuBackSubFlash;
extern SubMenuItem menuSubFlash;
extern BooleanMenuInfo minfoSubFlashBoolRam;
extern BooleanMenuItem menuSubFlashBoolRam;
extern BooleanMenuItem menuSubFlashBool1;
extern AnalogMenuInfo minfoIntRAM;
extern AnalogMenuItem menuIntRAM;
extern AnalogMenuItem menuIntFlash;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuIntFlash; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION actionItem(int id);
void CALLBACK_FUNCTION callback1(int id);
void CALLBACK_FUNCTION scrollCustomChanged(int id);
int fnSubRamCustomScrollRtCall(RuntimeMenuItem* item, uint8_t row, RenderFnMode mode, char* buffer, int bufferSize);
void CALLBACK_FUNCTION listItemWasSelected(int id);
void CALLBACK_FUNCTION listCustomHasSelect(int id);
int fnSubRamListCustomRtCall(RuntimeMenuItem* item, uint8_t row, RenderFnMode mode, char* buffer, int bufferSize);
void CALLBACK_FUNCTION listRamHasChanged(int id);
void CALLBACK_FUNCTION helloWorld(int id);
int largeNumCustomRtCall(RuntimeMenuItem* item, uint8_t row, RenderFnMode mode, char* buffer, int bufferSize);
void CALLBACK_FUNCTION rgbWasChanged(int id);
void CALLBACK_FUNCTION scrollRamFn(int id);
void CALLBACK_FUNCTION scrollRomChange(int id);

#endif // MENU_GENERATED_CODE_H
