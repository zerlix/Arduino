/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "allMenuItemProject_menu.h"
#include "../ThemeMonoBordered.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "allMenuItemProject", "4b5a6563-df78-4352-8554-da66fefe8311" };
ArduinoEEPROMAbstraction glArduinoEeprom(&EEPROM);
U8G2_SH1106_128X64_NONAME_F_HW_I2C gfx(U8G2_R0, U8X8_PIN_NONE, U8X8_PIN_NONE, U8X8_PIN_NONE);
U8g2Drawable gfxDrawable(&gfx, &Wire);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &gfxDrawable);

// Global Menu Item declarations
const PROGMEM AnyMenuInfo minfoTextPlain = { TC_I18N_MENU_20_NAME, 20, 0xffff, 0, NO_CALLBACK };
TextMenuItem menuTextPlain(&minfoTextPlain, "", 5, nullptr, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoText = { TC_I18N_MENU_19_NAME, 19, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackText(&minfoText, &menuTextPlain, INFO_LOCATION_PGM);
SubMenuItem menuText(&minfoText, &menuBackText, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSubRamListCustom = { TC_I18N_MENU_22_NAME, 22, 0xffff, 0, listCustomHasSelect };
ListRuntimeMenuItem menuSubRamListCustom(&minfoSubRamListCustom, 10, fnSubRamListCustomRtCall, nullptr, INFO_LOCATION_PGM);
char* enumStrSubRamListRam[] = { nullptr, nullptr, nullptr, nullptr, nullptr, nullptr };
AnyMenuInfo minfoSubRamListRam = { TC_I18N_MENU_21_NAME, 21, 0xffff, 0, listRamHasChanged };
ListRuntimeMenuItem menuSubRamListRam(&minfoSubRamListRam, 6, enumStrSubRamListRam, ListRuntimeMenuItem::RAM_ARRAY, &menuSubRamListCustom, INFO_LOCATION_RAM);
const char enumStrSubRamList1_0[] PROGMEM = TC_I18N_MENU_13_LIST_0;
const char enumStrSubRamList1_1[] PROGMEM = TC_I18N_MENU_13_LIST_1;
const char* const enumStrSubRamList1[] PROGMEM  = { enumStrSubRamList1_0, enumStrSubRamList1_1 };
const PROGMEM AnyMenuInfo minfoSubRamList1 = { TC_I18N_MENU_13_NAME, 13, 0xffff, 0, listItemWasSelected };
ListRuntimeMenuItem menuSubRamList1(&minfoSubRamList1, 2, enumStrSubRamList1, ListRuntimeMenuItem::FLASH_ARRAY, &menuSubRamListRam, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSubRamCustomScroll = { TC_I18N_MENU_18_NAME, 18, 0xffff, 0, scrollCustomChanged };
ScrollChoiceMenuItem menuSubRamCustomScroll(&minfoSubRamCustomScroll, fnSubRamCustomScrollRtCall, 2, 20, &menuSubRamList1, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSubRamScrollRom = { TC_I18N_MENU_17_NAME, 17, 11, 0, scrollRomChange };
ScrollChoiceMenuItem menuSubRamScrollRom(&minfoSubRamScrollRom, 2, 400, 5, 3, &menuSubRamCustomScroll, INFO_LOCATION_PGM);
extern char myScrollChoices[];
AnyMenuInfo minfoSubRamScrollRam = { TC_I18N_MENU_16_NAME, 16, 9, 0, scrollRamFn };
ScrollChoiceMenuItem menuSubRamScrollRam(&minfoSubRamScrollRam, 1, myScrollChoices, 10, 5, &menuSubRamScrollRom, INFO_LOCATION_RAM);
AnyMenuInfo minfoSubRamRGBR = { TC_I18N_MENU_15_NAME, 15, 0xffff, 0, callback1 };
Rgb32MenuItem menuSubRamRGBR(&minfoSubRamRGBR, RgbColor32(221, 0, 221), false, &menuSubRamScrollRam, INFO_LOCATION_RAM);
const PROGMEM AnyMenuInfo minfoSubRamRGBA = { TC_I18N_MENU_14_NAME, 14, 0xffff, 0, rgbWasChanged };
Rgb32MenuItem menuSubRamRGBA(&minfoSubRamRGBA, RgbColor32(255, 170, 187, 255), true, &menuSubRamRGBR, INFO_LOCATION_PGM);
SubMenuInfo minfoSubRam = { TC_I18N_MENU_10_NAME, 10, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSubRam(&minfoSubRam, &menuSubRamRGBA, INFO_LOCATION_RAM);
SubMenuItem menuSubRam(&minfoSubRam, &menuBackSubRam, &menuText, INFO_LOCATION_RAM);
const char enumStrSubFlashFoods_0[] PROGMEM = TC_I18N_MENU_12_ENUM_0;
const char enumStrSubFlashFoods_1[] PROGMEM = TC_I18N_MENU_12_ENUM_1;
const char enumStrSubFlashFoods_2[] PROGMEM = TC_I18N_MENU_12_ENUM_2;
const char* const enumStrSubFlashFoods[] PROGMEM  = { enumStrSubFlashFoods_0, enumStrSubFlashFoods_1, enumStrSubFlashFoods_2 };
EnumMenuInfo minfoSubFlashFoods = { TC_I18N_MENU_12_NAME, 12, 7, 2, NO_CALLBACK, enumStrSubFlashFoods };
EnumMenuItem menuSubFlashFoods(&minfoSubFlashFoods, 0, nullptr, INFO_LOCATION_RAM);
const PROGMEM AnyMenuInfo minfoSubFlashAction = { TC_I18N_MENU_11_NAME, 11, 0xffff, 0, actionItem };
ActionMenuItem menuSubFlashAction(&minfoSubFlashAction, &menuSubFlashFoods, INFO_LOCATION_PGM);
const PROGMEM FloatMenuInfo minfoSubFlashFltFlash = { TC_I18N_MENU_7_NAME, 7, 0xffff, 3, NO_CALLBACK };
FloatMenuItem menuSubFlashFltFlash(&minfoSubFlashFltFlash, 12.34, &menuSubFlashAction, INFO_LOCATION_PGM);
FloatMenuInfo minfoSubFlashFltRam = { TC_I18N_MENU_6_NAME, 6, 0xffff, 2, NO_CALLBACK };
FloatMenuItem menuSubFlashFltRam(&minfoSubFlashFltRam, 0.0, &menuSubFlashFltFlash, INFO_LOCATION_RAM);
RENDERING_CALLBACK_NAME_OVERRIDDEN(fnSubFlashLageNumRamRtCall, largeNumCustomRtCall, TC_I18N_MENU_5_NAME, -1)
EditableLargeNumberMenuItem menuSubFlashLageNumRam(fnSubFlashLageNumRamRtCall, LargeFixedNumber(10, 4, 100U, 1230U, false), 5, true, &menuSubFlashFltRam);
const PROGMEM AnyMenuInfo minfoSubFlashLargeNumW = { TC_I18N_MENU_4_NAME, 4, 0xffff, 0, NO_CALLBACK };
EditableLargeNumberMenuItem menuSubFlashLargeNumW(&minfoSubFlashLargeNumW, LargeFixedNumber(8, 0, 1000U, 0U, false), false, &menuSubFlashLageNumRam, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoSubFlash = { TC_I18N_MENU_3_NAME, 3, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSubFlash(&minfoSubFlash, &menuSubFlashLargeNumW, INFO_LOCATION_PGM);
SubMenuItem menuSubFlash(&minfoSubFlash, &menuBackSubFlash, &menuSubRam, INFO_LOCATION_PGM);
BooleanMenuInfo minfoSubFlashBoolRam = { TC_I18N_MENU_9_NAME, 9, 0xffff, 1, NO_CALLBACK, NAMING_TRUE_FALSE };
BooleanMenuItem menuSubFlashBoolRam(&minfoSubFlashBoolRam, false, &menuSubFlash, INFO_LOCATION_RAM);
const PROGMEM BooleanMenuInfo minfoSubFlashBool1 = { TC_I18N_MENU_8_NAME, 8, 6, 1, callback1, NAMING_TRUE_FALSE };
BooleanMenuItem menuSubFlashBool1(&minfoSubFlashBool1, false, &menuSubFlashBoolRam, INFO_LOCATION_PGM);
AnalogMenuInfo minfoIntRAM = { TC_I18N_MENU_2_NAME, 2, 0xffff, 511, helloWorld, 1, 1, TC_I18N_MENU_2_UNIT };
AnalogMenuItem menuIntRAM(&minfoIntRAM, 0, &menuSubFlashBool1, INFO_LOCATION_RAM);
const PROGMEM AnalogMenuInfo minfoIntFlash = { TC_I18N_MENU_1_NAME, 1, 4, 100, callback1, 0, 1, TC_I18N_MENU_1_UNIT };
AnalogMenuItem menuIntFlash(&minfoIntFlash, 0, &menuIntRAM, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(true);
    menuMgr.setEepromRef(&glArduinoEeprom);
    // Now add any readonly, non-remote and visible flags.
    menuSubFlashFltFlash.setReadOnly(true);
    menuSubFlashFltFlash.setLocalOnly(true);
    menuIntRAM.setLocalOnly(true);
    menuSubRamCustomScroll.setLocalOnly(true);

    // Code generated by plugins.
    gfx.begin();
    renderer.setUpdatesPerSecond(5);
    switches.init(internalDigitalIo(), SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForEncoder(&renderer, &menuIntFlash, 5, 6, 7);
    renderer.setTitleMode(BaseGraphicalRenderer::TITLE_FIRST_ROW);
    renderer.setUseSliderForAnalog(false);
    installMonoBorderedTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(nullptr, 1), true);
}

